SELECT * FROM covid_project.covid_deaths;
SELECT * FROM covid_project.covid_vaccinations ORDER BY location;

SELECT location, date, total_cases, new_cases, total_deaths, population
FROM covid_project.covid_deaths 
ORDER BY location, date;

-- total cases vs total deaths
SELECT location, date, total_cases, new_cases, total_deaths, (total_deaths/total_cases)*100 AS death_percentage
FROM covid_project.covid_deaths 
WHERE location LIKE '%states%'
ORDER BY location, date;

-- total cases vs population
SELECT location, date, total_cases, new_cases, total_deaths, (total_cases/population)*100 AS infection_percentage
FROM covid_project.covid_deaths
WHERE location LIKE '%states%'
ORDER BY location, date;

-- countries with highest infection rate compared to population
SELECT location, population, MAX(total_cases) AS highest_infection_count, MAX(total_cases/population)*100 AS percent_population_infected
FROM covid_project.covid_deaths 
GROUP BY location, population
ORDER BY percent_population_infected DESC; 

-- countries with highest death count per populaion
SELECT location, MAX(cast(total_deaths AS unsigned)) AS max_death_count
FROM covid_project.covid_deaths
WHERE continent IS NOT NULL
GROUP BY location
ORDER BY max_death_count DESC;

-- continents with the highest death count
SELECT continent, MAX(cast(total_deaths AS unsigned)) AS total_death_count
FROM covid_project.covid_deaths
WHERE continent IS NOT NULL
GROUP BY continent
ORDER BY total_death_count DESC;

-- global daily cases
SELECT date, SUM(new_cases) AS total_cases, SUM(new_deaths + 0) AS total_deaths, (SUM(new_deaths + 0)/SUM(new_cases))*100 AS death_percent
FROM covid_project.covid_deaths 
WHERE continent IS NOT NULL
GROUP BY date
ORDER BY date;

-- global total cases
SELECT SUM(new_cases) AS total_cases, SUM(new_deaths + 0) AS total_deaths, (SUM(new_deaths + 0)/SUM(new_cases))*100 AS death_percent
FROM covid_project.covid_deaths 
WHERE continent IS NOT NULL;


-- max vaxed in each country
SELECT dea.location, dea.population, MAX(vac.new_vaccinations + 0) AS max_vaxed
FROM  covid_project.covid_vaccinations AS vac
JOIN covid_project.covid_deaths AS dea
ON dea.date = vac.date AND dea.location = vac.location
WHERE dea.continent IS NOT NULL
GROUP BY location, population
ORDER BY max_vaxed DESC;

-- USING CTEs
-- total population vs vaccinations with window function
WITH popVSvac AS (
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
       SUM(vac.new_vaccinations + 0) OVER(PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_people_vaccinated
FROM  covid_project.covid_vaccinations AS vac
JOIN covid_project.covid_deaths AS dea
ON dea.date = vac.date AND dea.location = vac.location
WHERE dea.continent IS NOT NULL)

SELECT *, (rolling_people_vaccinated/population)*100 AS perc_vaxed
FROM popVSvac;

-- temp table
DROP TABLE IF EXISTS percent_pop_vaccinated;
CREATE TABLE percent_pop_vaccinated (
	continent TEXT,
    location TEXT,
    date DATE,
    population BIGINT,
    new_vaccinations BIGINT,
    rolling_people_vaccinated BIGINT);


INSERT INTO percent_pop_vaccinated
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
       SUM(vac.new_vaccinations + 0) OVER(PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_people_vaccinated
FROM  covid_project.covid_vaccinations AS vac
JOIN covid_project.covid_deaths AS dea
ON dea.date = vac.date AND dea.location = vac.location
WHERE dea.continent IS NOT NULL;

SELECT *, (rolling_people_vaccinated/population)*100 AS perc_vaxed
FROM percent_pop_vaccinated;

CREATE VIEW  percent_pop_vaccinated AS
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
       SUM(vac.new_vaccinations + 0) OVER(PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_people_vaccinated
FROM  covid_project.covid_vaccinations AS vac
JOIN covid_project.covid_deaths AS dea
ON dea.date = vac.date AND dea.location = vac.location
WHERE dea.continent IS NOT NULL;

SELECT `percent_pop_vaccinated`.`continent`,
    `percent_pop_vaccinated`.`location`,
    `percent_pop_vaccinated`.`date`,
    `percent_pop_vaccinated`.`population`,
    `percent_pop_vaccinated`.`new_vaccinations`,
    `percent_pop_vaccinated`.`rolling_people_vaccinated`
FROM `covid_project`.`percent_pop_vaccinated`;


-- avg daily vaccinations worldwide vs location actuals 

-- avg daily vaccinations for all countries
-- SELECT AVG(vac.new_vaccinations + 0) OVER(PARTITION BY dea.date ORDER BY dea.date, dea.location) AS avg_daily_vaccinations

-- daily vaccines per location
-- SELECT dea.location, vac.new_vaccinations 

-- total of daily vaccines for all locations
SELECT 
	vac.date,
    dea.location, 
    vac.new_vaccinations,
    ROUND(AVG(vac.new_vaccinations + 0) OVER(PARTITION BY dea.date ORDER BY dea.date), 2) AS avg_daily_vaccinations,
	SUM(vac.new_vaccinations) OVER(PARTITION BY dea.date) AS total_daily_vax
FROM covid_project.covid_vaccinations AS vac
JOIN covid_project.covid_deaths AS dea
ON vac.date = dea.date AND vac.location = dea.location
WHERE dea.continent IS NOT NULL AND vac.new_vaccinations IS NOT NULL AND vac.new_vaccinations != 0
GROUP BY vac.date, dea.location, vac.new_vaccinations;



/*SELECT dea.location, SUM(vac.new_vaccinations + 0) OVER(PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_people_vaccinated,
       ROUND(AVG(vac.new_vaccinations + 0) OVER (PARTITION BY dea.date ORDER BY dea.date), 2) AS avg_daily_vaccinations
FROM  covid_project.covid_vaccinations AS vac
JOIN covid_project.covid_deaths AS dea
ON dea.date = vac.date AND dea.location = vac.location
WHERE dea.continent IS NOT NULL AND new_vaccinations IS NOT NULL
GROUP BY dea.location;*/

-- restructured queries for visualization
Select SUM(new_cases) as total_cases, SUM(new_deaths + 0) as total_deaths, SUM(new_deaths + 0)/SUM(new_cases)*100 as death_percentage
From covid_project.covid_deaths
-- Where location like '%states%'
where continent is not null 
-- Group By date
order by total_cases;

-- European union is part of europe, taken out bc not in above query and want to be consistent
SELECT location, SUM(new_deaths + 0) as total_death_count
FROM covid_project.covid_deaths
WHERE continent IS NULL 
AND location NOT IN ('World', 'European Union', 'International')
GROUP BY location
ORDER BY total_death_count DESC;

SELECT Location, Population, MAX(total_cases) AS highest_infection_count,  Max((total_cases/population))*100 AS percent_population_infected
FROM covid_project.covid_deaths
GROUP BY Location, Population
ORDER BY percent_population_infected DESC;

SELECT Location, Population, date, MAX(total_cases) AS highest_infection_count,  Max((total_cases/population))*100 AS percent_population_infected
FROM covid_project.covid_deaths
GROUP BY Location, Population, date
ORDER BY percent_population_infected DESC;
